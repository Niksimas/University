a = [2.35, -4.15, 0, -3.1, 7.8, 6.3, -3.05, 1.5]
# среднее геометрическое (СГ) это корень количества взятых чисел из произведения этих чисел (посмотри в инете если не понятно)
# для среднего геометрического нам нужны только положительные числа
composition = 1.0   # считаем произведение
quantity = 0  # считаем количество чисел
for i in a:  # перебираем все числа
    if i > 0:  # если число положительное (больше 0)
        quantity += 1   # прибавляем еденичку
        composition *= i  # и умножаем на произведение предыдущих чисел
average = composition ** (1/quantity)  # из математики знаем, что корень можно представить в виде степени 1/n
# поэтому произведение возводим в степень 1 / кол-во чисел
print(average)   # выводим среднее геометрическое

# теперь надо найти число, которое находится ближе к среднему геометрическому
# т.е. у СГ и такого числа самая маленькая разница по модулю (функция abs() )
value = abs(average - a[0])  # сохраняем разницу между СГ и первым элементом списка (если будет 0, цикл работать не будет)
index = 0   # индекс нужного элемента
for i in a:
    if i < 0:  # если число меньше нуля
        continue   # переходим к следующей итерации (проход цикла по коду), т.е. пропускаем расчет для этого числа
    if abs(average - i) < value:   # если разница между СГ и числом меньше сохраненной наименьшей разницей
        value = abs(average - i)   # сохраняем новую разницу
        index = a.index(i)  # сохраняем индекс элемента
print(index)